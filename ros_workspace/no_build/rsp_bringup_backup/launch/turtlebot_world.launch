<launch>
  <!-- Load robot parameters -->
  <arg name="model" default="burger"/>
  <arg name="rbt1_name" default="burger_1"/>
  <arg name="rbt1_x_pos" default="0.5"/>
  <arg name="rbt1_y_pos" default="-5.0"/>
  <arg name="rbt1_z_pos" default="0.0"/>
  <arg name="rbt2_name" default="burger_2"/>
  <arg name="rbt2_x_pos" default="0.5"/>
  <arg name="rbt2_y_pos" default="-5.3"/>
  <arg name="rbt2_z_pos" default="0.0"/>
  <arg name="rbt3_name" default="burger_3"/>
  <arg name="rbt3_x_pos" default="0.5"/>
  <arg name="rbt3_y_pos" default="-5.6"/>
  <arg name="rbt3_z_pos" default="0.0"/>
  <arg name="rbt4_name" default="burger_4"/>
  <arg name="rbt4_x_pos" default="0.5"/>
  <arg name="rbt4_y_pos" default="-5.9"/>
  <arg name="rbt4_z_pos" default="0.0"/>

  <arg name="world_file"  default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 

<!--   <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>
   -->
<!--    <arg name="model" default="burger"/> -->
  <include file="$(find rsp_bringup)/launch/rsp_bringup.launch">
    <arg name="model" value="$(arg model)"/>
    <arg name="world_file_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
  </include>

<!--   <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include> -->
<!--   <arg name="base"/>
  <arg name="stacks"/>
  <arg name="3d_sensor"/> -->
  <!-- ////////// INBETWEEN THIS IS SPECIFIC ////// -->
  <!-- Load turtlebot3-01 -->
  <!-- <group ns="$(arg rbt1_name)"> -->

  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model $(arg model)_1 -x $(arg rbt1_x_pos) -y $(arg rbt1_y_pos) -z $(arg rbt1_z_pos) -param robot_description" />
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>
  <!-- </group> -->

<!--   <group ns="$(arg rbt2_name)">

  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model $(arg model)_2 -x $(arg rbt2_x_pos) -y $(arg rbt2_y_pos) -z $(arg rbt2_z_pos) -param robot_description" />
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>
  </group> -->

  <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
  <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>


  <!-- //////////////////// -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
</launch>